from pyrogram import Client
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from pyrogram.errors import UserNotParticipant
from config import FORCE_SUB_CHANNEL
import logging

logger = logging.getLogger(__name__)

async def handle_force_sub(client, message):
    """Check if user is subscribed to force sub channel"""
    if not FORCE_SUB_CHANNEL:
        return True
    
    try:
        user = await client.get_chat_member(FORCE_SUB_CHANNEL, message.from_user.id)
        if user.status in ["kicked", "left"]:
            raise UserNotParticipant
        return True
        
    except UserNotParticipant:
        try:
            invite_link = await client.create_chat_invite_link(FORCE_SUB_CHANNEL)
            buttons = [[
                InlineKeyboardButton("üîî J·¥è…™…¥ C ú·¥Ä…¥…¥·¥á ü", url=invite_link.invite_link)
            ], [
                InlineKeyboardButton("üîÑ T Ä è A…¢·¥Ä…™…¥", url=f"https://t.me/{client.me.username}?start={message.command[1]}")
            ]]
            
            await message.reply_text(
                "<b>üîí Y·¥è·¥ú ·¥ç·¥ús·¥õ ·¥ä·¥è…™…¥ ·¥è·¥ú Ä ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s  ô·¥è·¥õ!</b>\n\n"
                "P ü·¥á·¥Äs·¥á ·¥ä·¥è…™…¥ ·¥õ ú·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥Ä…¥·¥Ö ·¥Ñ ü…™·¥Ñ·¥ã 'T Ä è A…¢·¥Ä…™…¥'  ô·¥ú·¥õ·¥õ·¥è…¥.",
                reply_markup=InlineKeyboardMarkup(buttons)
            )
            return False
            
        except Exception as e:
            logger.error(f"Force sub error: {e}")
            await message.reply_text(
                "S·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥°·¥á…¥·¥õ ·¥° Ä·¥è…¥…¢. P ü·¥á·¥Äs·¥á ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥Ä·¥Ö·¥ç…™…¥."
            )
            return False
    
    except Exception as e:
        logger.error(f"Unexpected fsub error: {e}")
        return True
